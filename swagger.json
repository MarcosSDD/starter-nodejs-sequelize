{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "User API - NodeJS - Sequelize",
    "description": "Web Services Documentation : This is a sample ",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "marcos.saldivia@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Endpoints for User"
    }
  ],
  "paths": {
    "/user/": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create User",
        "description": "Create a User",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/newUser"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal Error"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal Error"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get All users",
        "description": "Get All Users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Profile user",
        "description": "Profile User",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user",
        "description": "Update User",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "any"
                  },
                  "surname": {
                    "example": "any"
                  },
                  "birthday": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "email": {
                    "example": "any"
                  },
                  "username": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user",
        "description": "Delete User",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Login user",
        "description": "Login User",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Jhon"
          },
          "surname": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "example": "jhon.doe@gg.com"
          },
          "password": {
            "type": "string",
            "example": "12345678"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "newUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Jhon"
          },
          "surname": {
            "type": "string",
            "example": "Doe"
          }
        },
        "xml": {
          "name": "newUser"
        }
      }
    }
  }
}